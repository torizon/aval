include:
  - ".e2e-tests.yml"
  - "sentry/.sentry-watch.yml"

.skip_on_watch: &skip_on_watch
  rules:
    - if: $WATCH
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - when: on_success

default:
  tags:
    - saas-linux-small-amd64

lint:
  <<: *skip_on_watch
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check --verbose --line-length 80 -- *.py

.aval-container-build:
  image: docker:dind
  <<: *skip_on_watch
  services:
    - name: docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $CI_DOCKER_HUB_PULL_USER -p $CI_DOCKER_HUB_PULL_PASSWORD
    - docker buildx inspect --bootstrap
    - docker buildx build
      --progress=plain
      --push
      --platform linux/$PLATFORM
      -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}-$DOCKER_SUFIX .
  needs:
    - lint
    - flake8-lint
    - validate-yaml

aval-container-build-amd64:
  extends: .aval-container-build
  variables:
    PLATFORM: amd64
    DOCKER_SUFIX: amd64

aval-container-build-arm64:
  extends: .aval-container-build
  tags:
    - saas-linux-small-arm64
  variables:
    PLATFORM: arm64/v8
    DOCKER_SUFIX: arm64

aval-container-build-manifest:
  tags:
    - saas-linux-small-amd64
  image: docker:dind
  needs:
    - aval-container-build-amd64
    - aval-container-build-arm64
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx imagetools create -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}-amd64
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}-arm64

.e2e-tests-container-build:
  image: docker:dind
  <<: *skip_on_watch
  services:
    - name: docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $CI_DOCKER_HUB_PULL_USER -p $CI_DOCKER_HUB_PULL_PASSWORD
    - docker buildx inspect --bootstrap
    - docker buildx build
      --progress=plain
      --file e2e-tests/Dockerfile
      --push
      --platform linux/$PLATFORM
      -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME}-$DOCKER_SUFIX .
  needs:
    - lint
    - flake8-lint
    - validate-yaml

e2e-tests-container-build-amd64:
  extends: .e2e-tests-container-build
  variables:
    PLATFORM: amd64
    DOCKER_SUFIX: amd64

e2e-tests-container-build-arm:
  extends: .e2e-tests-container-build
  tags:
    - saas-linux-small-arm64
  variables:
    PLATFORM: arm/v7
    DOCKER_SUFIX: arm

e2e-tests-container-build-arm64:
  extends: .e2e-tests-container-build
  tags:
    - saas-linux-small-arm64
  variables:
    PLATFORM: arm64/v8
    DOCKER_SUFIX: arm64

e2e-tests-container-build-manifest:
  tags:
    - saas-linux-small-amd64
  image: docker:dind
  needs:
    - e2e-tests-container-build-amd64
    - e2e-tests-container-build-arm
    - e2e-tests-container-build-arm64
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx imagetools create -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME}
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME}-amd64
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME}-arm
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME}-arm64

unit-test:
  image:
    name: ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
    pull_policy: always
  <<: *skip_on_watch
  script:
    - coverage run -m unittest discover -v -s . -p 'test_*.py'
    - coverage report -m
    - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  needs:
    - aval-container-build-manifest

unit-test-windows:
  <<: *skip_on_watch
  tags:
    - saas-windows-medium-amd64
  before_script:
    # Install python 3.12
    - curl.exe -L -o python-installer.exe https://www.python.org/ftp/python/3.12.10/python-3.12.10-amd64.exe
    - powershell -Command "Start-Process -FilePath python-installer.exe -ArgumentList '/quiet InstallAllUsers=1 PrependPath=1 Include_test=0' -Wait"
    - powershell -Command "& 'C:\Program Files\Python312\python.exe' --version"
  script:
    - powershell -Command "& 'C:\Program Files\Python312\python.exe' -m venv venv"
    - .\venv\Scripts\python.exe -m pip install --upgrade pip
    - .\venv\Scripts\activate
    - pip install -r requirements.txt
    - coverage run -m unittest discover -v -s . -p 'test_*.py'
    - coverage report -m
    - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  needs:
    - aval-container-build-manifest

flake8-lint:
  image: python:3.12
  <<: *skip_on_watch
  script:
    - pip install flake8
    - flake8 --ignore=E501,W503
  allow_failure: true

# This job exists because we use YAML 1.1 as supported by pyyaml, yq, yamllint
# and a bunch of other tools. However, YAML 1.2 is slowly being rolled out in
# the next years, so when this job starts to fail, it's probably a good
# indication we should update because tools are moving to 1.2 as the default.
validate-yaml:
  image:
    name: node:latest
    pull_policy: always
  <<: *skip_on_watch
  script:
    - npm install yaml
    - node validate_yaml.js

release:
  image: docker:dind
  <<: *skip_on_watch
  stage: deploy
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:main
    - docker tag ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:main ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
