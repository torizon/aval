include:
  - ".e2e-tests.yml"
  - "sentry/.sentry-watch.yml"
  
.skip_on_watch: &skip_on_watch
  rules:
    - if: $WATCH
      when: never
    - when: on_success

lint:
  <<: *skip_on_watch
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check --verbose --line-length 80 -- *.py

aval-container-build:
  image: docker:dind
  <<: *skip_on_watch
  services:
    - name: docker:dind
  variables:
    TORADEX_INTERNAL_DOCKERHUB_CACHE: "artifactory-horw.int.toradex.com/dockerhub-proxy-horw"
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --config ./buildkitd.toml --name multiarch-builder --driver docker-container --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --use
    - docker buildx inspect --bootstrap
    - docker run --privileged --rm ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/tonistiigi/binfmt --install arm64,arm
    - docker buildx build
      --progress=plain
      --push
      --platform linux/arm64/v8,linux/amd64
      -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME} .

e2e-tests-container-build:
  image: docker:dind
  <<: *skip_on_watch
  services:
    - name: docker:dind
  variables:
    TORADEX_INTERNAL_DOCKERHUB_CACHE: "artifactory-horw.int.toradex.com/dockerhub-proxy-horw"
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --config ./buildkitd.toml --name multiarch-builder --driver docker-container --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --use
    - docker buildx inspect --bootstrap
    - docker run --privileged --rm ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/tonistiigi/binfmt --install arm64,arm
    - docker buildx build
      --progress=plain
      --file e2e-tests/Dockerfile
      --push
      --platform linux/arm/v7,linux/arm64/v8,linux/amd64
      -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME} .

unit-test:
  image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
  <<: *skip_on_watch
  script:
    - coverage run -m unittest discover -v -s . -p 'test_*.py'
    - coverage report -m
    - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  needs:
    - aval-container-build

unit-test-windows:
  <<: *skip_on_watch
  tags:
    - vstudio
  script:
    - echo "Setting up environment for Windows runner..."
    - python -m venv venv
    - .\venv\Scripts\activate
    - pip install -r requirements.txt
    - coverage run -m unittest discover -v -s . -p 'test_*.py'
    - coverage report -m
    - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  needs:
    - aval-container-build

flake8-lint:
  image: python:3.12
  script:
    - pip install flake8
    - flake8 --ignore=E501,W503
  allow_failure: true

# This job exists because we use YAML 1.1 as supported by pyyaml, yq, yamllint
# and a bunch of other tools. However, YAML 1.2 is slowly being rolled out in
# the next years, so when this job starts to fail, it's probably a good
# indication we should update because tools are moving to 1.2 as the default.
validate-yaml:
  image: node:latest
  script:
    - npm install yaml
    - node validate_yaml.js

release:
  image: docker:dind
  <<: *skip_on_watch
  stage: deploy
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:main
    - docker tag ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:main ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
