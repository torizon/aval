.skip_on_watch: &skip_on_watch
  rules:
    - if: $WATCH
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - when: on_success

.e2e-test-template:
  tags:
    - all
  image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
  <<: *skip_on_watch
  variables:
    TARGET_BUILD_TYPE: "release"
    AVAL_VERBOSE: "true"
    GIT_STRATEGY: none
  script:
    - /usr/local/bin/entrypoint.sh "docker run -e SOC_UDT=$SOC_UDT --privileged --pid host
      -v /var/run/docker.sock:/var/run/docker.sock -v /home/torizon:/home/torizon
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME} /suites/run-tests.sh"
      --remove-databases
      --ignore-different-secondaries-between-updates --copy-artifact /home/torizon/report.xml report.xml
      --delegation-config /aval/delegation_config.toml --before "docker system prune --force --all"
      ${AVAL_EXTRA_OPTIONS} --run-before-on-host "/aval/host_command.sh device_information.json"
  artifacts:
    when: always
    reports:
      junit: report.xml
  needs:
    - e2e-tests-container-build-manifest
    - unit-test

e2e-test-apalis-imx8qm-release-with-rac:
  extends: .e2e-test-template
  variables:
    SOC_UDT: "apalis-imx8qm"
    USE_RAC: "true"

e2e-test-apalis-imx8qm-nightly:
  extends: .e2e-test-template
  variables:
    SOC_UDT: "apalis-imx8qm"
    TARGET_BUILD_TYPE: "nightly"
  needs:
    - e2e-test-apalis-imx8qm-release-with-rac

e2e-test-apalis-imx8qm-release-again:
  extends: .e2e-test-template
  variables:
    SOC_UDT: "apalis-imx8qm"
    TARGET_BUILD_TYPE: "nightly"
  needs:
    - e2e-test-apalis-imx8qm-nightly

e2e-test-verdin-imx8mpq-npu-release:
  tags:
    - all
  image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval:${CI_COMMIT_REF_NAME}
  <<: *skip_on_watch
  variables:
    TARGET_BUILD_TYPE: "release"
    AVAL_VERBOSE: "true"
  script:
    - /usr/local/bin/entrypoint.sh "docker run -e SOC_UDT=$SOC_UDT --privileged --pid host
      -v /var/run/docker.sock:/var/run/docker.sock -v /home/torizon:/home/torizon
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME} /suites/run-tests.sh"
      --remove-databases
      --copy-artifact /home/torizon/report.xml report.xml --delegation-config /aval/delegation_config.toml
      --device-config /aval/verdin-imx8mpq-npu.toml --before "docker system prune --force --all" --ignore-different-secondaries-between-updates
  artifacts:
    when: always
    reports:
      junit: report.xml
  needs:
    - e2e-tests-container-build-manifest
    - unit-test

e2e-test-sk-am62-nightly:
  extends: .e2e-test-template
  variables:
    TARGET_BUILD_TYPE: "nightly"
    SOC_UDT: "sk-am62"
    AVAL_EXTRA_OPTIONS: "--do-not-update"

e2e-test-any-arm64-cd:
  extends: .e2e-test-template
  variables:
    SOC_ARCHITECTURE: "arm64"
    USE_COMMON_DEVICES: "true"
    AVAL_EXTRA_OPTIONS: "--do-not-update"

e2e-test-any-arm64-nightly:
  extends: .e2e-test-template
  variables:
    TARGET_BUILD_TYPE: "nightly"
    SOC_ARCHITECTURE: "arm64"

e2e-test-any-arm-release:
  extends: .e2e-test-template
  variables:
    TARGET_BUILD_TYPE: "release"
    SOC_ARCHITECTURE: "arm"

e2e-test-any-arm64-shell:
  tags:
    - shell
  <<: *skip_on_watch
  variables:
    TARGET_BUILD_TYPE: "nightly"
    SOC_ARCHITECTURE: "arm64"
    AVAL_VERBOSE: "true"
  needs:
    - e2e-tests-container-build-manifest
    - unit-test
  before_script:
    - sudo apt update && sudo apt upgrade -y
    - sudo apt install -y python3 python3-venv make
    - python3 --version
  script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - make install
    - python main.py "docker run -e SOC_ARCHITECTURE=$SOC_ARCHITECTURE --privileged --pid host
      -v /var/run/docker.sock:/var/run/docker.sock -v /home/torizon:/home/torizon
      ${CI_REGISTRY}/${CI_PROJECT_PATH}/aval-e2e-tests:${CI_COMMIT_REF_NAME} /suites/run-tests.sh"
      --remove-databases
      --ignore-different-secondaries-between-updates --copy-artifact /home/torizon/report.xml report.xml
      --delegation-config ./delegation_config.toml --before "docker system prune --force --all"
      ${AVAL_EXTRA_OPTIONS} --run-before-on-host "./host_command.sh device_information.json"
  artifacts:
    when: always
    reports:
      junit: ./report.xml

e2e-test-any-arm64-powershell:
  tags:
    - pwsh
  <<: *skip_on_watch
  variables:
    TARGET_BUILD_TYPE: "nightly"
    SOC_ARCHITECTURE: "arm64"
    AVAL_VERBOSE: "true"
  needs:
    - e2e-tests-container-build-manifest
    - unit-test
  before_script:
    # If Python is already installed, winget returns an error, which causes the CI job to fail.
    # So, check if it's installed and, if it is, force LASTEXITCODE = 0.
    - |
      try {
        winget install --id Python.Python.3.11 --accept-source-agreements --accept-package-agreements
      } catch {
        Write-Output "Ignoring error from 'winget install --id Python.Python.3.11': $($_.Exception.Message)"
      }
      $global:LASTEXITCODE = 0
    - python --version
  script:
    - Write-Output "Setting up environment for Windows runner..."
    - python -m venv venv
    - .\venv\Scripts\activate
    - pip install -r requirements.txt
    - python main.py "docker run -e SOC_ARCHITECTURE=$env:SOC_ARCHITECTURE --privileged
      --pid host -v /var/run/docker.sock:/var/run/docker.sock -v /home/torizon:/home/torizon
      $env:CI_REGISTRY/$env:CI_PROJECT_PATH/aval-e2e-tests:$env:CI_COMMIT_REF_NAME /suites/run-tests.sh"
      --remove-databases
      --ignore-different-secondaries-between-updates --copy-artifact /home/torizon/report.xml report.xml
      --delegation-config .\delegation_config.toml --before "docker system prune --force --all"
      --run-before-on-host ".\host_command.ps1 device_information.json"
  artifacts:
    when: always
    reports:
      junit: .\report.xml
